<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonFilter"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonInclude"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonProperty"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.example.rest.webservices.bean.User"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.example.rest.webservices.dao.UserRepository"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="jakarta.persistence.ManyToOne"/>
    <fullyQualifiedTypeName name="jakarta.persistence.OneToMany"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
    <fullyQualifiedTypeName name="jakarta.persistence.FetchType"/>
    <fullyQualifiedTypeName name="com.example.microservices.limitservices.bean.Limits"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="com.example.microservices.limitservices.config.LimitConfig"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="com.example.microservices.currencyexchangeservice.dao.CurrencyExchangeDao"/>
    <fullyQualifiedTypeName name="com.example.microservices.currencyexchangeservice.bean.CurrencyExchange"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.example.microservices.currencyconversionservice.bean.CurrencyConversion"/>
    <fullyQualifiedTypeName name="com.example.microservices.currencyconversionservice.proxy.CurrencyExchangeProxy"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
    <fullyQualifiedTypeName name="java.util.function.Function"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.PredicateSpec"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.Buildable"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.Route"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.example.microservices.currencyexchangeservice.controller.CurrencyExchangeController"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
</qualifiedTypeNameHistroy>
